// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PrintedMedia.Models.Data;

namespace PrintedMedia.Migrations
{
    [DbContext(typeof(LibraryDbContext))]
    [Migration("20220512100441_initialCreate")]
    partial class initialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("PrintedMedia.Models.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("YearBorn")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Kurt Weill",
                            YearBorn = 1900
                        },
                        new
                        {
                            Id = 2,
                            Name = "Gillian Flynn",
                            YearBorn = 1971
                        },
                        new
                        {
                            Id = 3,
                            Name = "Donald Reinertsen",
                            YearBorn = 1950
                        },
                        new
                        {
                            Id = 4,
                            Name = "Yuri Lotman",
                            YearBorn = 1922
                        });
                });

            modelBuilder.Entity("PrintedMedia.Models.AuthorBook", b =>
                {
                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("BookId")
                        .HasColumnType("int");

                    b.HasKey("AuthorId", "BookId");

                    b.HasIndex("BookId");

                    b.ToTable("AuthorBooks");

                    b.HasData(
                        new
                        {
                            AuthorId = 1,
                            BookId = 3
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 4
                        },
                        new
                        {
                            AuthorId = 1,
                            BookId = 6
                        });
                });

            modelBuilder.Entity("PrintedMedia.Models.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PublisherId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            PublisherId = 4,
                            Title = "C# – Up & Running",
                            Year = 2013
                        },
                        new
                        {
                            Id = 2,
                            PublisherId = 7,
                            Title = "Design Now",
                            Year = 1983
                        },
                        new
                        {
                            Id = 3,
                            PublisherId = 4,
                            Title = "Event-Driven Development",
                            Year = 2019
                        },
                        new
                        {
                            Id = 4,
                            PublisherId = 6,
                            Title = "Myths of management",
                            Year = 2021
                        },
                        new
                        {
                            Id = 5,
                            PublisherId = 1,
                            Title = "Easy Performance",
                            Year = 2019
                        },
                        new
                        {
                            Id = 6,
                            PublisherId = 1,
                            Title = "Continuous Breaks",
                            Year = 2010
                        });
                });

            modelBuilder.Entity("PrintedMedia.Models.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext CHARACTER SET utf8mb4");

                    b.HasKey("Id");

                    b.ToTable("Publishers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manning"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sage"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Routledge"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Wiley"
                        },
                        new
                        {
                            Id = 5,
                            Name = "O'Reilly"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Harvard Business Press"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Packt Publishing"
                        });
                });

            modelBuilder.Entity("PrintedMedia.Models.AuthorBook", b =>
                {
                    b.HasOne("PrintedMedia.Models.Book", "Book")
                        .WithMany("Authors")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PrintedMedia.Models.Author", "Author")
                        .WithMany("BooksAuthored")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PrintedMedia.Models.Book", b =>
                {
                    b.HasOne("PrintedMedia.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
